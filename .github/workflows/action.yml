name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - 'main'
      - 'release'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: npm install
    - run: npm run lint

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: docker build -t web-app .

  audit:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/release'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: npm install
    - run: npm audit

  push:
    if: github.ref == 'refs/heads/release'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
    - run: docker build -t web-app .
    - run: docker tag web-app:latest ${{ secrets.DOCKER_HUB_USERNAME }}/web-app:latest
    - run: docker push ${{ secrets.DOCKER_HUB_USERNAME }}/web-app:latest

  push_to_ecr:
    if: github.ref == 'refs/heads/release' # Only push to ECR on release branch
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: ${{ steps.login-ecr.outputs.registry }}/web-app-wang:latest